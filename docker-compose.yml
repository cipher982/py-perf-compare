services:
  base:
    build:
      context: .
      dockerfile: docker/Dockerfile.base
    image: py-perf-compare-base

  cpython:
    build:
      context: .
      dockerfile: docker/Dockerfile.cpython
    volumes:
      - ./results:/results
    depends_on:
      - base
    environment:
      - IMPLEMENTATION=cpython
      - RUNS=${RUNS}
      - PRIME_UPPER_BOUND=${PRIME_UPPER_BOUND}
      - MATRIX_DIMENSION=${MATRIX_DIMENSION}
      - FIBONACCI_LENGTH=${FIBONACCI_LENGTH}
      - PYTHONUNBUFFERED=1
      - FORCE_COLOR=1
    entrypoint: ["/app/docker-entrypoint.sh"]

  cython:
    build:
      context: .
      dockerfile: docker/Dockerfile.cpython  # Reuse CPython container
    volumes:
      - ./results:/results
    depends_on:
      cpython:
        condition: service_completed_successfully
    environment:
      - IMPLEMENTATION=cython
      - RUNS=${RUNS}
      - PRIME_UPPER_BOUND=${PRIME_UPPER_BOUND}
      - MATRIX_DIMENSION=${MATRIX_DIMENSION}
      - FIBONACCI_LENGTH=${FIBONACCI_LENGTH}
      - PYTHONUNBUFFERED=1
      - FORCE_COLOR=1
    entrypoint: ["/app/docker-entrypoint.sh"]

  pypy:
    build:
      context: .
      dockerfile: docker/Dockerfile.pypy
    volumes:
      - ./results:/results
    depends_on:
      cython:
        condition: service_completed_successfully
    environment:
      - IMPLEMENTATION=pypy
      - RUNS=${RUNS}
      - PRIME_UPPER_BOUND=${PRIME_UPPER_BOUND}
      - MATRIX_DIMENSION=${MATRIX_DIMENSION}
      - FIBONACCI_LENGTH=${FIBONACCI_LENGTH}
      - PYTHONUNBUFFERED=1
      - FORCE_COLOR=1
    entrypoint: ["/app/docker-entrypoint.sh"]

  benchmark-controller:
    build:
      context: .
      dockerfile: docker/Dockerfile.controller
    volumes:
      - ./results:/results
    depends_on:
      pypy:
        condition: service_completed_successfully
